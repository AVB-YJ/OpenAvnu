/****************************************************************************
  Copyright (c) 2015, J.D. Koftinoff Software, Ltd.
  All rights reserved.

  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions are met:

   1. Redistributions of source code must retain the above copyright notice,
      this list of conditions and the following disclaimer.

   2. Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.

   3. Neither the name of J.D. Koftinoff Software, Ltd. nor the names of its
      contributors may be used to endorse or promote products derived from
      this software without specific prior written permission.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  POSSIBILITY OF SUCH DAMAGE.

******************************************************************************/

#ifndef ACMP_H_
#define ACMP_H_

/** \addtogroup acmp ACMP - Clause 8 */
/*@{*/

/** \addtogroup acmp_flag acmp_flag : flags field - Clause 8.2.1.17  */
/*@{*/

#define ACMP_FLAG_CLASS_B_BIT (15)
#define ACMP_FLAG_CLASS_B (0x0001)
#define ACMP_FLAG_CLASS_B_MASK (~0x0001)
#define ACMP_FLAG_FAST_CONNECT_BIT (14)
#define ACMP_FLAG_FAST_CONNECT (0x0002)
#define ACMP_FLAG_FAST_CONNECT_MASK (~0x0002)
#define ACMP_FLAG_SAVED_STATE_BIT (13)
#define ACMP_FLAG_SAVED_STATE (0x0004)
#define ACMP_FLAG_SAVED_STATE_MASK (~0x0004)
#define ACMP_FLAG_STREAMING_WAIT_BIT (12)
#define ACMP_FLAG_STREAMING_WAIT (0x0008)
#define ACMP_FLAG_STREAMING_WAIT_MASK (~0x0008)
#define ACMP_FLAG_SUPPORTS_ENCRYPTED_BIT (11)
#define ACMP_FLAG_SUPPORTS_ENCRYPTED (0x0010)
#define ACMP_FLAG_SUPPORTS_ENCRYPTED_MASK (~0x0010)
#define ACMP_FLAG_ENCRYPTED_PDU_BIT (10)
#define ACMP_FLAG_ENCRYPTED_PDU (0x0020)
#define ACMP_FLAG_ENCRYPTED_PDU_MASK (~0x0020)
#define ACMP_FLAG_TALKER_FAILED_BIT (9)
#define ACMP_FLAG_TALKER_FAILED (0x0040)
#define ACMP_FLAG_TALKER_FAILED_MASK (~0x0040)

/*@}*/

/** \addtogroup acmpdu ACMPDU - Clause 8.2.1 */
/*@{*/

#define ACMPDU_OFFSET_CONTROLLER_ENTITY_ID (AVTP_COMMON_CONTROL_HEADER_LEN + 0)
#define ACMPDU_OFFSET_TALKER_ENTITY_ID (AVTP_COMMON_CONTROL_HEADER_LEN + 8)
#define ACMPDU_OFFSET_LISTENER_ENTITY_ID (AVTP_COMMON_CONTROL_HEADER_LEN + 16)
#define ACMPDU_OFFSET_TALKER_UNIQUE_ID (AVTP_COMMON_CONTROL_HEADER_LEN + 24)
#define ACMPDU_OFFSET_LISTENER_UNIQUE_ID (AVTP_COMMON_CONTROL_HEADER_LEN + 26)
#define ACMPDU_OFFSET_STREAM_DEST_MAC (AVTP_COMMON_CONTROL_HEADER_LEN + 28)
#define ACMPDU_OFFSET_CONNECTION_COUNT (AVTP_COMMON_CONTROL_HEADER_LEN + 34)
#define ACMPDU_OFFSET_SEQUENCE_ID (AVTP_COMMON_CONTROL_HEADER_LEN + 36)
#define ACMPDU_OFFSET_FLAGS (AVTP_COMMON_CONTROL_HEADER_LEN + 38)
#define ACMPDU_OFFSET_STREAM_VLAN_ID (AVTP_COMMON_CONTROL_HEADER_LEN + 40)
#define ACMPDU_OFFSET_RESERVED (AVTP_COMMON_CONTROL_HEADER_LEN + 42)
#define ACMPDU_LEN (AVTP_COMMON_CONTROL_HEADER_LEN + 44)

/*@}*/

/** \addtogroup acmp_message_type message_type field - Clause 8.2.1.5  */
/*@{*/

#define ACMP_MESSAGE_TYPE_CONNECT_TX_COMMAND (0)
#define ACMP_MESSAGE_TYPE_CONNECT_TX_RESPONSE (1)
#define ACMP_MESSAGE_TYPE_DISCONNECT_TX_COMMAND (2)
#define ACMP_MESSAGE_TYPE_DISCONNECT_TX_RESPONSE (3)
#define ACMP_MESSAGE_TYPE_GET_TX_STATE_COMMAND (4)
#define ACMP_MESSAGE_TYPE_GET_TX_STATE_RESPONSE (5)
#define ACMP_MESSAGE_TYPE_CONNECT_RX_COMMAND (6)
#define ACMP_MESSAGE_TYPE_CONNECT_RX_RESPONSE (7)
#define ACMP_MESSAGE_TYPE_DISCONNECT_RX_COMMAND (8)
#define ACMP_MESSAGE_TYPE_DISCONNECT_RX_RESPONSE (9)
#define ACMP_MESSAGE_TYPE_GET_RX_STATE_COMMAND (10)
#define ACMP_MESSAGE_TYPE_GET_RX_STATE_RESPONSE (11)
#define ACMP_MESSAGE_TYPE_GET_TX_CONNECTION_COMMAND (12)
#define ACMP_MESSAGE_TYPE_GET_TX_CONNECTION_RESPONSE (13)

/*@}*/

/** \addtogroup acmp_timeouts ACMP timeouts field - Clause 8.2.2  */
/*@{*/
#define ACMP_TIMEOUT_CONNECT_TX_COMMAND_MS (2000)
#define ACMP_TIMEOUT_DISCONNECT_TX_COMMAND_MS (200)
#define ACMP_TIMEOUT_GET_TX_STATE_COMMAND (200)
#define ACMP_TIMEOUT_CONNECT_RX_COMMAND_MS (4500)
#define ACMP_TIMEOUT_DISCONNECT_RX_COMMAND_MS (500)
#define ACMP_TIMEOUT_GET_RX_STATE_COMMAND_MS (200)
#define ACMP_TIMEOUT_GET_TX_CONNECTION_COMMAND (200)
/*@}*/

/** \addtogroup acmp_status ACMP status field - Clause 8.2.1.6  */
/*@{*/

#define ACMP_STATUS_SUCCESS (0)
#define ACMP_STATUS_LISTENER_UNKNOWN_ID (1)
#define ACMP_STATUS_TALKER_UNKNOWN_ID (2)
#define ACMP_STATUS_TALKER_DEST_MAC_FAIL (3)
#define ACMP_STATUS_TALKER_NO_STREAM_INDEX (4)
#define ACMP_STATUS_TALKER_NO_BANDWIDTH (5)
#define ACMP_STATUS_TALKER_EXCLUSIVE (6)
#define ACMP_STATUS_LISTENER_TALKER_TIMEOUT (7)
#define ACMP_STATUS_LISTENER_EXCLUSIVE (8)
#define ACMP_STATUS_STATE_UNAVAILABLE (9)
#define ACMP_STATUS_NOT_CONNECTED (10)
#define ACMP_STATUS_NO_SUCH_CONNECTION (11)
#define ACMP_STATUS_COULD_NOT_SEND_MESSAGE (12)
#define ACMP_STATUS_TALKER_MISBEHAVING (13)
#define ACMP_STATUS_LISTENER_MISBEHAVING (14)
#define ACMP_STATUS_RESERVED (15)
#define ACMP_STATUS_CONTROLLER_NOT_AUTHORIZED (16)
#define ACMP_STATUS_INCOMPATIBLE_REQUEST (17)

/// New: The AVDECC Listener is being asked to connect to something that it
/// cannot listen to, e.g. it is being asked to
/// listen to its own AVDECC Talker stream.
#define ACMP_STATUS_LISTENER_INVALID_CONNECTION (18)
#define ACMP_STATUS_NOT_SUPPORTED (31)

/*@}*/

#endif /* ACMP_H_ */
